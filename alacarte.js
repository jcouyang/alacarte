(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.AlaCarte = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc-bundle 0.10.7
var PS = {};
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var In = (function () {
      function In(value0) {
          this.value0 = value0;
      };
      In.create = function (value0) {
          return new In(value0);
      };
      return In;
  })();
  var Interpreter = function (__superclass_Data$dotFunctor$dotFunctor_0, interpret) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.interpret = interpret;
  };
  var Inj = function (__superclass_Data$dotFunctor$dotFunctor_0, __superclass_Data$dotFunctor$dotFunctor_1, inj) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this["__superclass_Data.Functor.Functor_1"] = __superclass_Data$dotFunctor$dotFunctor_1;
      this.inj = inj;
  };
  var interpret = function (dict) {
      return dict.interpret;
  };
  var injectId = function (dictFunctor) {
      return new Inj(function () {
          return dictFunctor;
      }, function () {
          return dictFunctor;
      }, Control_Category.id(Control_Category.categoryFn));
  };
  var inj = function (dict) {
      return dict.inj;
  };
  var inject = function (dictInj) {
      return function ($27) {
          return In.create(inj(dictInj)($27));
      };
  };
  var functorOr = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof Inl) {
                      return new Inl(Data_Functor.map(dictFunctor)(f)(v.value0));
                  };
                  if (v instanceof Inr) {
                      return new Inr(Data_Functor.map(dictFunctor1)(f)(v.value0));
                  };
                  throw new Error("Failed pattern match at AlaCarte line 9, column 3 - line 9, column 32: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var injectLeft = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Inj(function () {
              return dictFunctor;
          }, function () {
              return functorOr(dictFunctor)(dictFunctor1);
          }, Inl.create);
      };
  };
  var injectRight = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictInj) {
                  return new Inj(function () {
                      return dictFunctor2;
                  }, function () {
                      return functorOr(dictFunctor)(dictFunctor1);
                  }, function ($28) {
                      return Inr.create(inj(dictInj)($28));
                  });
              };
          };
      };
  };
  var interpreterOr = function (dictInterpreter) {
      return function (dictInterpreter1) {
          return new Interpreter(function () {
              return functorOr(dictInterpreter["__superclass_Data.Functor.Functor_0"]())(dictInterpreter1["__superclass_Data.Functor.Functor_0"]());
          }, function (v) {
              if (v instanceof Inl) {
                  return interpret(dictInterpreter)(v.value0);
              };
              if (v instanceof Inr) {
                  return interpret(dictInterpreter1)(v.value0);
              };
              throw new Error("Failed pattern match at AlaCarte line 19, column 3 - line 19, column 34: " + [ v.constructor.name ]);
          });
      };
  };
  var foldExpr = function (dictFunctor) {
      return function (f) {
          return function (v) {
              return f(Data_Functor.map(dictFunctor)(foldExpr(dictFunctor)(f))(v.value0));
          };
      };
  };
  var interpretExpr = function (dictInterpreter) {
      return foldExpr(dictInterpreter["__superclass_Data.Functor.Functor_0"]())(interpret(dictInterpreter));
  };
  exports["In"] = In;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Inj"] = Inj;
  exports["Interpreter"] = Interpreter;
  exports["foldExpr"] = foldExpr;
  exports["inj"] = inj;
  exports["inject"] = inject;
  exports["interpret"] = interpret;
  exports["interpretExpr"] = interpretExpr;
  exports["functorOr"] = functorOr;
  exports["interpreterOr"] = interpreterOr;
  exports["injectId"] = injectId;
  exports["injectLeft"] = injectLeft;
  exports["injectRight"] = injectRight;
  exports["Functor"] = PS["Data.Functor"].Functor;
})(PS["AlaCarte"] = PS["AlaCarte"] || {});
module.exports = PS["AlaCarte"];

},{}]},{},[1])(1)
});
